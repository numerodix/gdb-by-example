# Qt basic types


{{<toc,levels:2-3,source:.>}}


## QString

* Composed of `QChar` which are 16bit
* Charset: UTF-16
* Underlying storage type: `QArrayData`

```
{{<include:snippets/qstring>}}
```

```
# print as raw
(gdb) p/r name
$0 = {
  static null = {<No data fields>}, 
  d = 0x55555576ecf0
}

# print the data object as raw
(gdb) p/r name.d
$1 = (QString::Data *) 0x55555576ecf0

# pretty print the data object
(gdb) p/r *name.d
$2 = {
  <QArrayData> = {
...

# print the length of the string
(gdb) p/r (*name.d).size
$3 = 22

# print the allocated size of the string
(gdb) p/r (*name.d).alloc
$4 = 23

# print the offset of the string data
(gdb) p/r (*name.d).offset
$5 = 24
```

Printing the string data is a bit more complicated. It is located at an offset
from the start of the data object.

```
(gdb) x/22uh ((void*) (name.d)) + (*name.d).offset
0x55555576ed08: 72      97      114     114     121     32      71      114
0x55555576ed18: 101     103     115     111     110     45      87      105
0x55555576ed28: 108     108     105     97      109     115
```

As this string is plain ASCII we can see these are valid ASCII codes: 'H' = 72,
'a' = 97 etc.
